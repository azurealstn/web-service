spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/customer?serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=195230

# API \uD638\uCD9C\uC2DC, SQL \uBB38\uC744 \uCF58\uC194\uC5D0 \uCD9C\uB825\uD55C\uB2E4.
spring.jpa.show-sql=true

# DDL \uC815\uC758\uC2DC \uB370\uC774\uD130\uBCA0\uC774\uC2A4\uC758 \uACE0\uC720 \uAE30\uB2A5\uC744 \uC0AC\uC6A9\uD569\uB2C8\uB2E4.
# ex) \uD14C\uC774\uBE14 \uC0DD\uC131, \uC0AD\uC81C \uB4F1
spring.jpa.generate-ddl=true

# MySQL \uC0C1\uC138 \uC9C0\uC815
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

# MySQL \uC744 \uC0AC\uC6A9\uD560 \uAC83.
spring.jpa.database=mysql

# OAuth \uD3EC\uD568
spring.profiles.include=oauth

# \uC138\uC158 \uC800\uC7A5\uC18C
spring.session.store-type=jdbc
spring.session.jdbc.table-name= SPRING_SESSION
spring.session.jdbc.initialize-schema= always

# Test OAuth
spring.security.oauth2.client.registration.google.client-id=test
spring.security.oauth2.client.registration.google.client-secret=test
spring.security.oauth2.client.registration.google.scope=profile,email